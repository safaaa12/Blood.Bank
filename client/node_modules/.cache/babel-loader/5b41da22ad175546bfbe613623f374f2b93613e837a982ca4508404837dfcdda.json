{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D0\\u05E1\\u05E8\\u05D0\\u05D0 \\u05D0\\u05DC\\u05D2\\u05E8\\u05D2\\u05D0\\u05D5\\u05D9\\\\OneDrive\\\\Desktop\\\\\\u05E9\\u05E0\\u05D4 \\u05D3\\\\\\u05E1\\u05DE\\u05E1\\u05D8\\u05E8 \\u05D1\\\\\\u05D1\\u05D9\\u05D5 \\u05E8\\u05D5\\u05E4\\u05D0\\u05D9\\u05EA\\\\Blood.Bank\\\\client\\\\src\\\\components\\\\ResearchDataPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst bloodTypes = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\nconst ResearchDataPage = () => {\n  _s();\n  const [data, setData] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    fetch('/api/blood/stats').then(response => response.json()).then(result => {\n      if (result && result.bloodTypeCounts) {\n        const bloodTypeCounts = {};\n        bloodTypes.forEach(type => {\n          bloodTypeCounts[type] = 0;\n        });\n        result.bloodTypeCounts.forEach(item => {\n          if (bloodTypeCounts[item._id] !== undefined) {\n            bloodTypeCounts[item._id] = item.count;\n          }\n        });\n        setData(bloodTypeCounts);\n      }\n      setLoading(false);\n    }).catch(err => {\n      console.error(\"Error fetching research data:\", err);\n      setError(\"Error fetching research data\");\n      setLoading(false);\n    });\n  }, [fetchUserRole]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 21\n  }, this);\n  const chartData = {\n    labels: bloodTypes,\n    datasets: [{\n      label: 'Blood Type Count',\n      data: bloodTypes.map(type => data[type] || 0),\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blood Type Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Blood Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Count\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: bloodTypes.map(type => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: data[type]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '600px',\n        height: '400px',\n        marginTop: '50px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Blood Types'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Count'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ResearchDataPage, \"7bLVVSqSxcNiDhnRDgCFqCJMUhs=\");\n_c = ResearchDataPage;\nexport default ResearchDataPage;\nvar _c;\n$RefreshReg$(_c, \"ResearchDataPage\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","bloodTypes","ResearchDataPage","_s","data","setData","loading","setLoading","error","setError","fetch","then","response","json","result","bloodTypeCounts","forEach","type","item","_id","undefined","count","catch","err","console","fetchUserRole","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","datasets","label","map","backgroundColor","borderColor","borderWidth","style","width","height","marginTop","options","scales","x","title","display","text","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/אסראא אלגרגאוי/OneDrive/Desktop/שנה ד/סמסטר ב/ביו רופאית/Blood.Bank/client/src/components/ResearchDataPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\r\n\r\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\r\n\r\nconst bloodTypes = ['A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', 'O+', 'O-'];\r\n\r\nconst ResearchDataPage = () => {\r\n  const [data, setData] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/blood/stats')\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        if (result && result.bloodTypeCounts) {\r\n          const bloodTypeCounts = {};\r\n\r\n          bloodTypes.forEach(type => {\r\n            bloodTypeCounts[type] = 0;\r\n          });\r\n\r\n          result.bloodTypeCounts.forEach(item => {\r\n            if (bloodTypeCounts[item._id] !== undefined) {\r\n              bloodTypeCounts[item._id] = item.count;\r\n            }\r\n          });\r\n\r\n          setData(bloodTypeCounts);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error fetching research data:\", err);\r\n        setError(\"Error fetching research data\");\r\n        setLoading(false);\r\n      });\r\n  }, [fetchUserRole]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n\r\n  const chartData = {\r\n    labels: bloodTypes,\r\n    datasets: [\r\n      {\r\n        label: 'Blood Type Count',\r\n        data: bloodTypes.map(type => data[type] || 0),\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Blood Type Statistics</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Blood Type</th>\r\n            <th>Count</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {bloodTypes.map((type) => (\r\n            <tr key={type}>\r\n              <td>{type}</td>\r\n              <td>{data[type]}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div style={{ width: '600px', height: '400px', marginTop: '50px' }}>\r\n        <Bar\r\n          data={chartData}\r\n          options={{\r\n            scales: {\r\n              x: {\r\n                title: {\r\n                  display: true,\r\n                  text: 'Blood Types',\r\n                },\r\n              },\r\n              y: {\r\n                beginAtZero: true,\r\n                title: {\r\n                  display: true,\r\n                  text: 'Count',\r\n                },\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResearchDataPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}